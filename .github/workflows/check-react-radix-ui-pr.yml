name: Check before PR / react-radix-ui

on:
  pull_request:
    paths: ["design/generated/css/**", "packages/react/radix-ui/src/**", "packages/react/radix-ui/.storybook/**"]
    branches: ["dev", "main"]

jobs:
  playwright-tests:
    name: playwright-report
    runs-on: [self-hosted]
    environment: Build
    permissions:
      contents: read # actions/checkout이 저장소 코드를 읽기 위해 필요
      pull-requests: write # PR에 댓글을 작성하기 위해 필요
    steps:
      # step 0. 체크아웃
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # step 1. 테스트 필요한 변경점인지 확인
      - name: Check for changes in src/ or storybook/
        id: changes
        working-directory: ./packages/react/radix-ui
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          echo "$CHANGED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          if echo "$CHANGED_FILES" | grep 'packages/react/radix-ui' | grep -qE '(src/|storybook/|tests/)'; then
            echo "run_tests=true" >> $GITHUB_ENV
          else
            echo "run_tests=false" >> $GITHUB_ENV
          fi
      # step 2. 빌드 및 테스트
      - name: Build monorepo dependencies
        if: env.run_tests == 'true'
        working-directory: ./
        run: |
          pnpm install --no-frozen-lockfile
          pnpm build:fonts
      - name: Build Storybook And Run Playwright Tests
        if: env.run_tests == 'true'
        working-directory: ./packages/react/radix-ui
        run: |
          sed -i 's/DSDS/DSDS \/ TEMP/g' .storybook/theme.ts
          cp ../../../assets/images/dsds-logo-temp.png ./public/images/dsds-logo.png
          cp ../../../assets/favicon-temp.ico ./public/favicon.ico
          export STORYBOOK_BASE_URL=https://dsds.mwebdev.samsungds.net/storybooks-temp/react-radix-ui
          pnpm build:storybook
          ./scripts/docker-test.sh
          mkdir -p /appdata/mwebdev/shared/www/storybooks-temp/react-radix-ui
          rm -rf /appdata/mwebdev/shared/www/storybooks-temp/react-radix-ui/*
          cp -rf storybook-static/* /appdata/mwebdev/shared/www/storybooks-temp/react-radix-ui/
          echo "[테스트 스토리북](https://dsds.mwebdev.samsungds.net/storybooks-temp/react-radix-ui)이 빌드되었습니다." >> comment.md

      - name: 테스트 결과 파싱 및 코멘트 작성
        if: env.run_tests == 'true' && failure()
        working-directory: ./packages/react/radix-ui
        run: |
          mkdir -p /appdata/mwebdev/shared/www/playwright-reports-temp/react-radix-ui
          rm -rf /appdata/mwebdev/shared/www/playwright-reports-temp/react-radix-ui/*
          cp -rf playwright-report/* /appdata/mwebdev/shared/www/playwright-reports-temp/react-radix-ui/
          echo "#### ❌ Playwright 테스트 실패" >> comment.md
          echo "" >> comment.md
          echo "[테스트 레포트 보기](https://dsds.mwebdev.samsungds.net/playwright-reports-temp/react-radix-ui)" >> comment.md
          echo "" >> comment.md
          echo "**실패한 테스트**" >> comment.md
          jq -r '.. | objects | select(.ok == false and .title and .id) | "- [\(.title)](https://dsds.mwebdev.samsungds.net/playwright-reports-temp/react-radix-ui/#?testId=\(.id))"' playwright-report/results.json >> comment.md

      - name: PR에 코멘트 추가
        if: env.run_tests == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const comment = fs.readFileSync('./packages/react/radix-ui/comment.md', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      # step 4. 테스트 리포트 아티팩트로 업로드
      - uses: actions/upload-artifact@v3
        if: env.run_tests == 'true' && always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Skip tests
        if: env.run_tests != 'true'
        run: echo "No changes in src/ or storybook/, skipping tests."
